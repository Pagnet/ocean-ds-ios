name: CD

on: push
  # push:
  #   branches:
  #     - master

jobs:
  build:
    runs-on: macos-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v2

      - name: Select xcode version
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: latest-stable

      - name: Set git identity
        run: |
          git config --global user.name "Blu Release Bot"
          git config --global user.email "devs@useblu.com.br"

      - name: Bundle install
        run: bundle install

      - name: Install swiftgen
        run: brew install swiftgen

      - name: Update tokens
        run: sh update_tokens.sh

      - name: Increment version cocoapod
        run: |
          LATEST_VERSION_TOKENS_LIB_NPM=`npm show @useblu/ocean-tokens version`
          rm OceanTokens.podspec
          rm OceanComponents.podspec
          cp -fR OceanTokens.template OceanTokens.podspec
          cp -fR OceanComponents.template OceanComponents.podspec
          sed -i '' "s/#VERSION_NAME#/'$LATEST_VERSION_TOKENS_LIB_NPM'/g" OceanTokens.podspec
          sed -i '' "s/#VERSION_NAME#/'$LATEST_VERSION_TOKENS_LIB_NPM-$GITHUB_RUN_NUMBER'/g" OceanComponents.podspec

      - name: Commit changes
        run: |
          LATEST_VERSION_TOKENS_LIB_NPM=`npm show @useblu/ocean-tokens version`
          git add . && git commit -am "chore: update tokens v$LATEST_VERSION_TOKENS_LIB_NPM [skip ci]" && git push
          git tag -a "OceanComponents-$LATEST_VERSION_TOKENS_LIB_NPM-$GITHUB_RUN_NUMBER" -m "Release of version $LATEST_VERSION_TOKENS_LIB_NPM-$GITHUB_RUN_NUMBER" && git push --tags

      - name: Deploy libary cocoapod
        env:
          COCOAPODS_TRUNK_TOKEN: ${{ secrets.COCOAPODS_TRUNK_TOKEN }}
        run: |
        set -eo pipefail
        pod lib lint OceanComponents.podspec --allow-warnings
        pod trunk push OceanComponents.podspec --allow-warnings
        

      # - name: Install pods
      #   run: pod install

      # - name: Increment version app sample
      #   run: bundle exec fastlane prepare_new_version

      # - name: Deploy app sample
      #   run: bundle exec fastlane beta_testflight
